[{"/home/dilan/Documents/Online-Shopping/Online-Shopping/src/index.js":"1","/home/dilan/Documents/Online-Shopping/Online-Shopping/src/App.js":"2","/home/dilan/Documents/Online-Shopping/Online-Shopping/src/reportWebVitals.js":"3","/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/HeaderComponent.js":"4","/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/HomePage/HomePage.js":"5","/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/Sign-Up/Sign-Up.js":"6","/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/Email-Verification/EmailVerification.js":"7","/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/EnterEmail/EnterEmail.js":"8","/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/ChangePassword/ChangePassword.js":"9","/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/Home(Buyer)/HomeBuyer.js":"10","/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/Sign-Up/Lable.js":"11","/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/HomePage/LoginComponent.js":"12","/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/Sign-Up/Input.js":"13","/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/EnterEmail/LableForm.js":"14","/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/EnterEmail/ButtonForm.js":"15"},{"size":266,"mtime":1618811336168,"results":"16","hashOfConfig":"17"},{"size":1080,"mtime":1618813863463,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1618811336168,"results":"19","hashOfConfig":"17"},{"size":884,"mtime":1618918300621,"results":"20","hashOfConfig":"17"},{"size":377,"mtime":1618811336168,"results":"21","hashOfConfig":"17"},{"size":10993,"mtime":1618913200744,"results":"22","hashOfConfig":"17"},{"size":2201,"mtime":1618813788356,"results":"23","hashOfConfig":"17"},{"size":3059,"mtime":1618813718041,"results":"24","hashOfConfig":"17"},{"size":1516,"mtime":1618813560624,"results":"25","hashOfConfig":"17"},{"size":1828,"mtime":1618811336168,"results":"26","hashOfConfig":"17"},{"size":380,"mtime":1618811336168,"results":"27","hashOfConfig":"17"},{"size":5578,"mtime":1618815863111,"results":"28","hashOfConfig":"17"},{"size":592,"mtime":1618827764325,"results":"29","hashOfConfig":"17"},{"size":514,"mtime":1618811336168,"results":"30","hashOfConfig":"17"},{"size":508,"mtime":1618811336168,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"bwna32",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/dilan/Documents/Online-Shopping/Online-Shopping/src/index.js",[],["64","65"],"/home/dilan/Documents/Online-Shopping/Online-Shopping/src/App.js",[],"/home/dilan/Documents/Online-Shopping/Online-Shopping/src/reportWebVitals.js",[],"/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/HeaderComponent.js",[],"/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/HomePage/HomePage.js",[],"/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/Sign-Up/Sign-Up.js",["66","67","68","69"],"import React,{useState,useEffect} from 'react';\n\n\nimport HeaderComponent from '../HeaderComponent';//navigation component\nimport Lable from '../Sign-Up/Lable';//Import Lable Component in Sign-up\nimport Input from '../Sign-Up/Input';//Import User Input\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\n\nimport '../../css/Sign-Up/SignUp.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {Col,\n    Form,\n    Button\n    } from 'react-bootstrap';\n\nconst SignUp = () => {\n\n    const [Trademode,setTrademode] = useState('buyer');\n    const [TrademodeCode,setTrademodeCode] = useState(null);\n    const [email,setEmail ] = useState();//state for email\n    const [password,setPassword] = useState('');//state for password\n    const [fname,setFname] = useState('')//state for first name\n    const [sname,setSname] = useState('');//state for second name\n    const [pnumber,setPnumber] = useState('');//state for phone number\n    const [company,setCompany] = useState('');//state for company name\n\n    const [mailError,setMailerror] = useState('');//state for mail error\n    const [passError,setpassError] = useState('');//state for password error\n    const [buttonState,setButonstate] = useState('true');//state for button disable\n\n    const [Toggle,setToggle] = useState('password');\n\n    function ToggleButton(event){//function for toggle button\n        event.preventDefault();\n        if(Toggle === 'password'){\n            setToggle('text');\n        }else{\n            setToggle('password');\n        }\n    }\n\n    const handleState = () => {\n        \n    }\n\n    const validation = () => {//function for validation\n        //e.preventDefault();//denied the refreshing\n        console.log('Trade Mode',Trademode);\n\n        const emailReg = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;//regex for email\n        const passwordReg = /^(?=.*?[A-Za-z])(?=.*?[0-9]).{6,}$/;//regex for password\n        const telephoneReg = /^(?:7|0|(?:\\+94))[0-9]{9,10}$/;//regex for telephone\n\n        if(Trademode === 'buyer'){\n            if(emailReg.test(email) === true){\n                if(passwordReg.test(password) === true){\n                    if(fname && sname){\n                        if(telephoneReg.test(pnumber) === true){\n                            setButonstate('');\n                        }\n                        else {\n                            setButonstate('true');\n                        }\n                    }else{  \n                        setButonstate('true');\n                        \n                    }\n                } else{\n                    setpassError('Password is too short!');\n                }\n            } else{\n                setButonstate('true');\n                setMailerror('Invalid Email!');\n            }\n        } else /*if(Trademode === 'seller')*/{\n            if(emailReg.test(email) === true){\n                console.log('EMail okay');\n                if(passwordReg.test(password) === true){\n                    console.log('password okay');\n                    if(fname && sname){\n                        console.log('names okay');\n                        if(telephoneReg.test(pnumber) === true){\n                            console.log('number');\n                            if(company){\n                                setButonstate('');\n                                console.log('company okay');\n                            }else{\n                                setButonstate('true');\n                            }\n                        }\n                        else {\n                            setButonstate('true');\n                        }\n                    }else{ \n                        setButonstate('true');\n                    }\n                }\n            } else{\n                setButonstate('true');\n            }\n        }\n    }\n\n    useEffect(() => {//fuction for trade mode selection\n       \n        validation();\n    })\n\n    useEffect(() => {\n        tradeModeFun();\n    },[Trademode])\n\n    const tradeModeFun = () => {\n        console.log('function executed!');\n        // setTrademode('seller');//select the seller mode \n        console.log(Trademode);\n        \n           if(Trademode === 'seller'){\n            //    setTrademode('buyer');\n            setTrademodeCode(\n                <div>\n                    <Form.Row>\n                        <Col className=\"alignItems\">\n                            <Lable\n                                Lable=\"Company Name : \"\n                            />\n                            <Input\n                                 placeholder=\"Company Name Here\"\n                                 type=\"text\"\n                                 onChange={handleState}\n\n                            /> \n                        </Col>\n                    </Form.Row>\n                    <br/>\n                </div>\n                        );\n                        \n           }else{\n                setTrademodeCode(null);\n                // setTrademode('seller');\n           }\n        \n    }\n  \n    return(\n        <div>\n            <HeaderComponent/>\n                <div style={{display: 'flex',  \n                            justifyContent:'center', \n                            alignItems:'center', \n                            height: '100vh',\n                            backgroundColor: '#f8f1f1'}}>\n               \n                <Form>\n                        <Form.Row>\n                            <Col className=\"alignItems\">\n                                <span className=\"dot\"></span>\n                                    <Form.Label style={{marginRight: \"10px\",marginLeft: \"5px\"}}>\n                                    Select Trade Role :\n                                    </Form.Label>\n                                        <Form.Check\n                                            type=\"radio\"\n                                            label=\"Buyer\"\n                                            value=\"buyer\"\n                                            name=\"trademode\"\n                                            onClick={(e) => {setTrademode(e.target.value)}} \n                                            \n                                        />\n                                            <Form.Check\n                                                type=\"radio\"\n                                                label=\"Seller\"\n                                                value=\"seller\"\n                                                name=\"trademode\"\n                                                onClick={(e) => {setTrademode(e.target.value)}}\n                                            />\n                            </Col>\n                        </Form.Row><br/>\n                            <Form.Row>\n                                <Col className=\"alignItems\">\n                                    <Lable\n                                        Lable=\"Email : \"\n                                    />\n                                            <Input\n                                                placeholder=\"Email Will Be Used As Login ID\"\n                                                type=\"text\"\n                                                onChange={(e) => {setEmail(e.target.value)}}\n                                            />\n                            </Col>\n                    </Form.Row><br/>\n    \n                        <Form.Row>\n                            <Col className=\"alignItems\">\n                                <Lable\n                                    Lable=\"Password : \"\n                                />  \n                                        <Input\n                                            placeholder=\"Please Set Login Password\"\n                                            type={Toggle}\n                                            onChange={(e) => {setPassword(e.target.value)}}\n                                        />\n                                            <button \n                                                class=\"button button5\"\n                                                onClick={ToggleButton}\n                                            ><i><FontAwesomeIcon icon={faEye} /></i></button>\n                            </Col>\n                        </Form.Row><br/>\n    \n                           <div>\n                                {TrademodeCode}\n                             \n                           </div>\n    \n                            <Form.Row>\n                                <Col className=\"alignItems\">\n                                    <Lable\n                                        Lable=\"Full Name : \"\n                                    />\n                                        <Input\n                                            placeholder=\"First Name Here\"\n                                            type=\"text\"\n                                            onChange={(e) => {setFname(e.target.value)}}\n                                        />\n                                            <Input\n                                                placeholder=\"Second Name Here\"\n                                                type=\"text\"\n                                                onChange={(e) => {setSname(e.target.value)}}\n                                            />\n                                </Col>\n                               </Form.Row><br/>\n    \n                            <Form.Row>\n                                <Col className=\"alignItems\">\n                                    <Lable\n                                        Lable=\"Tel  :  \"\n                                    />\n                                        <Input\n                                            placeholder=\"Phone Number\"\n                                            type=\"text\"\n                                            onChange={(e) => {setPnumber(e.target.value)}}\n                                        />\n                                </Col>\n                            </Form.Row><br/>\n    \n                            <Form.Row>\n                                <Col className=\"alignItems\">\n                                    <Button \n                                        variant=\"danger\" \n                                        onClick={validation}\n                                        type=\"submit\"\n                                        className=\"roundInput\"\n                                        style={{backgroundColor:\"#FF7616\"}}\n                                        disabled={buttonState}\n                                    >\n                                        Register\n                                    </Button>\n                                </Col>\n                            </Form.Row>\n                </Form>\n           \n                </div>\n        </div>\n    );\n}\n\nexport default SignUp;","/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/Email-Verification/EmailVerification.js",[],"/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/EnterEmail/EnterEmail.js",[],"/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/ChangePassword/ChangePassword.js",[],"/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/Home(Buyer)/HomeBuyer.js",[],"/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/Sign-Up/Lable.js",[],"/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/HomePage/LoginComponent.js",[],"/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/Sign-Up/Input.js",[],"/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/EnterEmail/LableForm.js",[],"/home/dilan/Documents/Online-Shopping/Online-Shopping/src/pages/EnterEmail/ButtonForm.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":28,"column":20,"nodeType":"76","messageId":"77","endLine":28,"endColumn":30},{"ruleId":"74","severity":1,"message":"78","line":30,"column":12,"nodeType":"76","messageId":"77","endLine":30,"endColumn":21},{"ruleId":"74","severity":1,"message":"79","line":31,"column":12,"nodeType":"76","messageId":"77","endLine":31,"endColumn":21},{"ruleId":"80","severity":1,"message":"81","line":114,"column":7,"nodeType":"82","endLine":114,"endColumn":18,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'setCompany' is assigned a value but never used.","Identifier","unusedVar","'mailError' is assigned a value but never used.","'passError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tradeModeFun'. Either include it or remove the dependency array.","ArrayExpression",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [Trademode, tradeModeFun]",{"range":"89","text":"90"},[4056,4067],"[Trademode, tradeModeFun]"]